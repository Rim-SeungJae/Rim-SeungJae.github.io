

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>RimSJ blog</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2024-03-08T16:38:39+09:00</updated>
  <author>
    <name>Rim,Seung-Jae</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko-KR"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Rim,Seung-Jae </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>개 이미지 분류 모델</title>
    <link href="http://localhost:4000/posts/%EA%B0%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B6%84%EB%A5%98-%EB%AA%A8%EB%8D%B8/" rel="alternate" type="text/html" title="개 이미지 분류 모델" />
    <published>2024-03-08T16:30:00+09:00</published>
  
    <updated>2024-03-08T16:30:00+09:00</updated>
  
    <id>http://localhost:4000/posts/%EA%B0%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B6%84%EB%A5%98-%EB%AA%A8%EB%8D%B8/</id>
    <content src="http://localhost:4000/posts/%EA%B0%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B6%84%EB%A5%98-%EB%AA%A8%EB%8D%B8/" />
    <author>
      <name>Rim,Seung-Jae</name>
    </author>

  
    
    <category term="프로젝트" />
    
    <category term="인공지능" />
    
  

  
    <summary>
      





      
개요
이 프로젝트는 강아지 이미지를 종에 따라 분류할 수 있는 간단한 CNN 모델의 구현을 다루고 있습니다.


모델 구조
아래와 같은 구조로 모델을 설계하였습니다.


  
    
      
    
  



  
    
      
    
  


–
초기 학습 결과


  
    
      
    
  


위의 그래프는 모델의 초기 훈련 결과를 보여줍니다(가로축은 반복 횟수입니다). 훈련 정확도는 10회 이상의 반복에서 계속 상승하여 100%에 가까워집니다. 그러나 검증 정확도는 두 번째 반복 이후로 20% 근처에 묶여 있습니다. 훈련 손실도 유사한 상황을 보입니다. 훈련 손실은 10회 이상의 반복에서 계속 감소합니다. 그러나 검증 손실은 두 번째 반복 이후에 오히려 상승합니다....
    </summary>
  

  </entry>

  
  <entry>
    <title>SKKU 뭐먹지</title>
    <link href="http://localhost:4000/posts/SKKU-%EB%AD%90%EB%A8%B9%EC%A7%80/" rel="alternate" type="text/html" title="SKKU 뭐먹지" />
    <published>2024-03-05T12:30:00+09:00</published>
  
    <updated>2024-03-05T12:30:00+09:00</updated>
  
    <id>http://localhost:4000/posts/SKKU-%EB%AD%90%EB%A8%B9%EC%A7%80/</id>
    <content src="http://localhost:4000/posts/SKKU-%EB%AD%90%EB%A8%B9%EC%A7%80/" />
    <author>
      <name>Rim,Seung-Jae</name>
    </author>

  
    
    <category term="프로젝트" />
    
    <category term="웹개발" />
    
  

  
    <summary>
      





      
개요
‘SKKU 뭐먹지’란 매일 식사 메뉴를 고민하는 성균관대학교 자연과학캠퍼스 학생들을 위한 식당 추천 서비스입니다.이런 고민은 학생들이 학교 근처의 모든 음식점들에 대한 정보를 알기 힘들다는 점에서 비롯됩니다. 그러므로 학교 근처의 다양한 음식점 정보를 제공하는 웹 서비스를 제공하고자 합니다.


웹사이트 구조
‘SKKU 뭐먹지’는 정적 웹 페이지입니다. 그러므로 백엔드와의 연결이 필요 없는 몇개의 html 및 이미지 파일들로 구성되어 있습니다.

1) 메인화면


  
    
      
    
  


웹사이트의 메인화면입니다. 상단의 네비게이션 바를 활용하여 웹의 다른 여러가지 기능들을 이용할 수 있습니다.

2) 음식점 지도







네비게이션 바에서 ‘음식점 지도’를 클릭하면 열리...
    </summary>
  

  </entry>

  
  <entry>
    <title>해양 침적 쓰레기 이미지를 활용한 인공지능 프로젝트</title>
    <link href="http://localhost:4000/posts/%ED%95%B4%EC%96%91-%EC%B9%A8%EC%A0%81-%EC%93%B0%EB%A0%88%EA%B8%B0-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EC%9D%B8%EA%B3%B5%EC%A7%80%EB%8A%A5-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/" rel="alternate" type="text/html" title="해양 침적 쓰레기 이미지를 활용한 인공지능 프로젝트" />
    <published>2024-01-11T16:00:00+09:00</published>
  
    <updated>2024-03-05T12:56:40+09:00</updated>
  
    <id>http://localhost:4000/posts/%ED%95%B4%EC%96%91-%EC%B9%A8%EC%A0%81-%EC%93%B0%EB%A0%88%EA%B8%B0-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EC%9D%B8%EA%B3%B5%EC%A7%80%EB%8A%A5-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</id>
    <content src="http://localhost:4000/posts/%ED%95%B4%EC%96%91-%EC%B9%A8%EC%A0%81-%EC%93%B0%EB%A0%88%EA%B8%B0-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EC%9D%B8%EA%B3%B5%EC%A7%80%EB%8A%A5-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/" />
    <author>
      <name>Rim,Seung-Jae</name>
    </author>

  
    
    <category term="프로젝트" />
    
    <category term="인공지능" />
    
  

  
    <summary>
      





      
개요
본 프로젝트에는 AI-Hub의 해양 침적 쓰레기 이미지 데이터셋이 사용되었다. 해당 데이터셋은 해양 침적 쓰레기의 수거를 위해 실시, 설계 조사를 보다 빠르고 효율적으로 수행하고자 조사 과정에서 생성되는 소나 조사 이미지와 수중 촬영 이미지를 통해 침적 쓰레기를 자동 인식하고 분류할 수 있도록 인공지능을 훈련하기 위한 데이터셋이다.

우리는 해당 데이터셋의 선행 프로젝트에서 인공지능 모델로 YOLO를 선택했음에 주목했다. YOLO는 특정 이미지에서 여러가지 대상들이 각각 어떤 사물인지, 그리고 이미지 내에서 어느 위치에 있는지 탐지해내는 multi-label object detection 측면에서 강력하기로 유명한 모델이다.

그러나 해당 데이터셋의 이미지들을 분석해보면 한 이미지 내에 여러가지...
    </summary>
  

  </entry>

  
  <entry>
    <title>14725 개미굴</title>
    <link href="http://localhost:4000/posts/14725-%EA%B0%9C%EB%AF%B8%EA%B5%B4/" rel="alternate" type="text/html" title="14725 개미굴" />
    <published>2024-01-11T15:25:00+09:00</published>
  
    <updated>2024-01-11T17:55:26+09:00</updated>
  
    <id>http://localhost:4000/posts/14725-%EA%B0%9C%EB%AF%B8%EA%B5%B4/</id>
    <content src="http://localhost:4000/posts/14725-%EA%B0%9C%EB%AF%B8%EA%B5%B4/" />
    <author>
      <name>Rim,Seung-Jae</name>
    </author>

  
    
    <category term="ps스터디" />
    
    <category term="boj" />
    
  

  
    <summary>
      





      14725 개미굴 해법



  
    
      :link:  문제 링크
    
  


트라이라고 하는 독특한 트리 형태의 자료구조를 활용하는 문제. 단, 맛보기 정도의 난이도이기에 map을 활용하여 트리를 구현한다는 정도만 이해한다면 쉽게 풀 수 있다.

#include&amp;lt;map&amp;gt;
#include&amp;lt;set&amp;gt;
#include&amp;lt;vector&amp;gt;
#include&amp;lt;string&amp;gt;
#include&amp;lt;iostream&amp;gt;
#include&amp;lt;queue&amp;gt;

using namespace std;

class node
{
    public:
        map&amp;lt;string,node*&amp;gt; children;
        void insert(vecto...
    </summary>
  

  </entry>

  
  <entry>
    <title>2042 구간 합 구하기</title>
    <link href="http://localhost:4000/posts/2042-%EA%B5%AC%EA%B0%84-%ED%95%A9-%EA%B5%AC%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="2042 구간 합 구하기" />
    <published>2024-01-10T14:05:00+09:00</published>
  
    <updated>2024-01-11T17:55:26+09:00</updated>
  
    <id>http://localhost:4000/posts/2042-%EA%B5%AC%EA%B0%84-%ED%95%A9-%EA%B5%AC%ED%95%98%EA%B8%B0/</id>
    <content src="http://localhost:4000/posts/2042-%EA%B5%AC%EA%B0%84-%ED%95%A9-%EA%B5%AC%ED%95%98%EA%B8%B0/" />
    <author>
      <name>Rim,Seung-Jae</name>
    </author>

  
    
    <category term="ps스터디" />
    
    <category term="boj" />
    
  

  
    <summary>
      





      2042 구간 합 구하기 해법



  
    
      :link:  문제 링크
    
  


세그먼트 트리를 이용하는 문제. 이전에 다루었던 1019 책 페이지 문제보다 조금 더 심화되어 세그먼트 트리의 모든 기능을 다룰 줄 알아야 해결할 수 있는 문제이다.

#include&amp;lt;cstdio&amp;gt;

using namespace std;

long long seg[4000010];
long long tmp[1000010];

long long init(int start,int end,int idx)
{
    if(start == end)
    {
        seg[idx] = tmp[start];
        return seg[idx];
    }
    int mid = (st...
    </summary>
  

  </entry>

</feed>


